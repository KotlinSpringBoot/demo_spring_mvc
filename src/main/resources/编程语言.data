PL0000001=C#=C#是微软公司发布的一种面向对象的、运行于.NET Framework之上的高级程序设计语言。C#是微软公司研究员Anders Hejlsberg的最新成果。C#看起来与Java有着惊人的相似；它包括了诸如单一继承、界面、与Java几乎同样的语法，和编译成中间代码再运行的过程。但是C#与Java有着明显的不同，它借鉴了Delphi的一个特点，与COM（组件对象模型）是直接集成的，而且它是微软公司.NET windows网络框架的主角。　
PL0000002=Basic=BASIC（Beginners' All-purpose Symbolic Instruction Code，又译培基），意思就是“初学者的全方位符式指令代码”，是一种设计给初学者使用的程序设计语言。BASIC是一种直译式的编程语言，在完成编写后不须经由编译及连结等手续即可执行，但如果需要单独执行时仍然需要将其建立成执行档。
PL0000003=Pascal=Pascal是一种计算机通用的高级程序设计语言。Pascal的取名是为了纪念十七世纪法国著名哲学家和数学家Blaise Pascal。它由瑞士Niklaus Wirth教授于六十年代末设计并创立。Pascal语言语法严谨，层次分明，程序易写，具有很强的可读性，是第一个结构化的编程语言。
PL0000004=C=C语言是一种计算机程序设计语言，它既具有高级语言的特点，又具有汇编语言的特点。它由美国贝尔研究所的D.M.Ritchie于1972年推出，1978年后，C语言已先后被移植到大、中、小及微型机上，它可以作为工作系统设计语言，编写系统应用程序，也可以作为应用程序设计语言，编写不依赖计算机硬件的应用程序。它的应用范围广泛，具备很强的数据处理能力，不仅仅是在软件开发上，而且各类科研都需要用到C语言，适于编写系统软件，三维，二维图形和动画，具体应用比如单片机以及嵌入式系统开发。
PL0000005=C++=C++是一种静态数据类型检查的、支持多重编程范式的通用程序设计语言。它支持过程化程序设计、数据抽象、面向对象程序设计、泛型程序设计等多种程序设计风格。
PL0000006=JAVA=Java是一种可以撰写跨平台应用软件的面向对象的程序设计语言，是由Sun Microsystems公司于1995年5月推出的Java程序设计语言和Java平台（即JavaSE, JavaEE, JavaME）的总称。Java 技术具有卓越的通用性、高效性、平台移植性和安全性，广泛应用于个人PC、数据中心、游戏控制台、科学超级计算机、移动电话和互联网，同时拥有全球最大的开发者专业社群。在全球云计算和移动互联网的产业环境下，Java更具备了显著优势和广阔前景。Java广泛地应用于web开发、企业软件开发和Android app开发。随着对运行在Android平台上的移动app的需求不断增长，对java的应用也达到一个新高度，这也是为什么全球范围内对java的需求依然第一的原因。Java是高级的面向对象的编程语言，学习起来比C++更容易，但是程序的性能要比C或C++差一些。因此，一般不用java构建核心引擎、操作系统或嵌入式系统开发。
PL0000007=AWK=二十世纪70年代Bells Labs创立了Awk语言，它是一种用于处理大数据量强大的命令行语言。
PL0000008=BASH=Bash(Bourne-Again Shell)是一种专门为GNU操作系统服务的命令行语言。
PL0000009=Common Lisp=一种遵循ANSI-standard规范高效运行的Lisp编程语言.使用Common Lisp最好的地方是用户可以根据应用领域选择合适方法和范例。
PL0000010=Eiffel=Eiffel是一种面向对象的语言。它演变自1985年，是世界上众多最成熟的编程语言中的一种.在解决计算问题中，Eiffel代码是可读的和可重用的。
PL0000011=Emacs Lisp=Lisp 计算机编程语言的变体，Emacs Lisp可以被任何其他的编程语言所使用。
PL0000012=Erlang=Erlang是另外一种编程语言，通常分布在网络环境中，被用于构建强大的系统程序，Erlang和Java类似。
PL0000013=Forth=Forth 是一种基于堆栈概念的高层次编程语言.它不依赖于变量的使用。这种语言帮助解决了一些编程中的老问题。
PL0000014=Icon=Icon是另外一种具有处理数据结构和字符串特征的高层次编程语言。Icon的运行速度比C语言还要快。它在程序员尝试新想法，快速编程，文本处理，图像编程，处理大的数据类型方面很有作用。
PL0000015=Lisp=在处理大数据量演算，解决方案，动态变化的问题，以及多种混杂数据的问题上，Lisp是一种理想的编程语言。它适合定位最具有挑战性的问题。
PL0000016=Lua=Lua是一种强大快速的脚本语言。
PL0000017=Mercury=它是一种将逻辑编程方式和功能编程方式联合在一起的编程语言。Mercury在复杂的，严格类型风格的系统上运行。
PL0000018=PHP=PHP是一种广泛使用的编程语言.因为它所编写的代码量小，越来越多的公司转向PHP编程。
PL0000019=Perl=由Larry Wall设计，Perl是最为广泛使用的编程语言中的一种，Perl第一次被应用在文本编辑器上使用了。
PL0000020=Pike=Pike和C语言以及Java类似。它是一种易学的语言，因为它不牵涉复杂的函数功能。
PL0000021=Python=Python是一种面向对象、直译式计算机程序设计语言。
PL0000022=JavaScript=JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，最早是在HTML（标准通用标记语言下的一个应用）网页上使用，用来给HTML网页增加动态功能。在1995年时，由Netscape公司的Brendan Eich，在网景导航者浏览器上首次设计实现而成。因为Netscape与Sun合作，Netscape管理层希望它外观看起来像Java，因此取名为JavaScript。但实际上它的语法风格与Self及Scheme较为接近。为了取得技术优势，微软推出了JScript，CEnvi推出ScriptEase，与JavaScript同样可在浏览器上运行。为了统一规格，因为JavaScript兼容于ECMA标准，因此也称为ECMAScript。 ECMAScript。javascript组成:语言的语法和基本对象。文档对象模型（DOM），描述处理网页内容的方法和接口。浏览器对象模型（BOM），描述与浏览器进行交互的方法和接口。
PL0000023=SQL=SQL结构化查询语言是一种能被数据库理解的语言。 SQL是由IBM工程师于1970年开发的，用来创建、更新和检索“System R”这个数据库管理系统中的数据。从那时起，SQL已经走过了很长的路，时至今日，它仍然是市场最需要的一种技能。近年来，使用非SQL数据库来处理大数据的这种需求给SQL蒙上了阴影，但持续的时间不会太长。不久人们就会认识到SQL提供的大数据分析方法更好，它是一种更具有扩展性、可验证性和经得起时间检验的技术。SQL语言用以辅助进行数据驱动网站、web应用程序、桌面应用程序以及移动应用程序的开发。SQL在任何应用领域都有应用。从学习的角度看，SQL比较容易掌握，并且由于有很高的市场需求，你可以仅仅通过SQL就能找到第一份工作。然而，要找到一份高薪酬工作，还需要拥有设计、管理和维护多种数据库，比如Oracle、 MySQL、PostgreSQL、 IBM DB2和Microsoft SQL Server等的经验。
PL0000024=Swift=Swift是相对较新的语言，并且正快速地流行起来。Swift是完全用于Apple的开发语言，例如iOS应用程序、OS X应用程序、watchOS应用程序和tvOS应用程序。Swift引入了C和Objective-c的优点，并且能和cocoa以及cocoa touch框架很好地协同工作。Apple拥有自己的巨大生态系统，毫无疑问，Swift将成为在未来几年中引领其发展的语言。如果你想进入apple生态系统，Swift正是要学习的语言。Swift学起来很容易，用起来很有趣，究其原因在于它引入了严格类型语言（如c、java、 c++）的所有特性，而使用起来和任何脚本语言（如 Ruby或Python）一样容易和有趣。你可以通过swift playgrounds尝试使用swift，并且可以马上看到结果，无需担忧程序的编译和运行。Apple声称Swift是第一个工业质量级的系统编程语言，它提供了类似脚本的语法，能使开发变得绝对轻松。
PL0000025=Ruby=Ruby 是另外一种开源的，面向对象的，通用的编程语言，这是一种简单的，有助于快速应用开发的语言。 Ruby最有名的框架是 Rails（Ruby on Rails），这主要被用来 web 开发。它在服务器端开发是很有用的，有很多公司都使用它，如：Bloomberg, Airbnb, Shopify, Hulu 和 Slideshare 等等，且被用在一个或多个项目之中。
PL0000026=Rust=Rust是后起之秀，并且承诺要成为新一代的热门技术。它快速地成为硬核心开发人员所痴迷的技术，并且以非常快的速度发展着。Rust语言还在发展之中，还是一门新语言，因此，Rust的就业市场尚未形成，传播的深度与广度还不够。Rust语言由Mozilla公司于2010年开发，它是Graydon Hoare所负责的一个研究项目。而现在开发者社区喜爱它并负责对其维护，他们决心将Rust推向一个新的高度。Rust是一种低级的系统编程语言，其目标是提供高性能、安全性和并发性，它是一个不错的C/C++的替代语言。过去，C开发人员努力使用Rust编写操作系统、数据库、嵌入式程序、内核以及各种系统程序。Rust是一种现代语言，它拥有高级语言的灵活性和C这样的低级语言才有的高性能以及对硬件的可控性。
PL0000027=GO=GO编程语言 – Go是谷歌公司推出的一款相对较新的语言，对于web服务器开发、网络开发以及命令行程序开发来说，它是又一个比较优秀的选择。
PL0000028=R=R当要进行数据分析和统计软件开发时，你可以选择R语言。随着大数据和机器学习的兴起，Ｒ得以不断发展并和Python和Matlab展开了激烈竞争。
PL0000029=Perl=Perl是最古老的语言之一，但它正越来越受欢迎并显示出伟大复苏的迹象。DevOps是新生事物， Perl正发展成为用于DevOps的深受欢迎的语言, 请密切关注Perl, 它或许会成为像Python语言那样的下一个重要语言。
PL0000030=Haskell= Haskell统治着函数式编程的世界。和面向对象编程相比，函数式编程具有完全不同的哲学理念。函数式编程在分布式系统开发中应用广泛，分布式系统开发的关键需求是并行执行和并发性。人工智能和数学计算是函数式编程的又一应用领域，Haskell的应用同样如此。
PL0000031=Groovy=Groovy是一种基于JVM（Java虚拟机）的敏捷开发语言，它结合了Python、Ruby和Smalltalk的许多强大的特性，Groovy 代码能够与 Java 代码很好地结合，也能用于扩展现有代码。由于其运行在 JVM 上的特性，Groovy 可以使用其他 Java 语言编写的库。Groovy 是 用于Java虚拟机的一种敏捷的动态语言，它是一种成熟的面向对象编程语言，既可以用于面向对象编程，又可以用作纯粹的脚本语言。使用该种语言不必编写过多的代码，同时又具有闭包和动态语言中的其他特性。Groovy是JVM的一个替代语言（替代是指可以用 Groovy 在Java平台上进行 Java 编程），使用方式基本与使用 Java代码的方式相同，该语言特别适合与Spring的动态语言支持一起使用，设计时充分考虑了Java集成，这使 Groovy 与 Java 代码的互操作很容易。注意：不是指Groovy替代java，而是指Groovy和java很好的结合编程。基本特点1、 构建在强大的Java语言之上 并 添加了从Python，Ruby和Smalltalk等语言中学到的 诸多特征，例如动态类型转换、闭包和元编程（metaprogramming）支持。。2、为Java开发者提供了 现代最流行的编程语言特性，而且学习成本很低（几乎为零）。3、 支持DSL（Domain Specific Languages领域定义语言）和其它简洁的语法，让代码变得易于阅读和维护。4、受检查类型异常(Checked Exception)也可以不用捕获。5、 Groovy拥有处理原生类型，面向对象以及一个Ant DSL，使得创建Shell Scripts变得非常简单。6、在开发Web，GUI，数据库或控制台程序时 通过 减少框架性代码 大大提高了开发者的效率。7、支持单元测试和模拟（对象），可以 简化测试。8、无缝集成 所有已经存在的 Java对象和类库。9、直接编译成Java字节码，这样可以在任何使用Java的地方 使用Groovy。10、支持函数式编程，不需要main函数。11、一些新的运算符。12、默认导入常用的包。13、断言不支持jvm的-ea参数进行开关。14、支持对对象进行布尔求值。15、类不支持default作用域，且默认作用域为public。16、groovy中基本类型也是对象，可以直接调用对象的方法。动态类型类型对于变量，属性，方法，闭包的参数以及方法的返回类型都是可有可无的，都是在给变量赋值的时候才决定它的类型， 不同的类型会在后面用到，任何类型都可以被使用,即使是基本类型 (通过自动包装（autoboxing）). 当需要时，很多类型之间的转换都会自动发生，比如在这些类型之间的转换: 字符串（String），基本类型(如int) 和类型的包装类 (如Integer)之间，可以把不同的基本类型添加到同一数组（collections）中。闭包闭包就是可以使用参数的代码片段，每个闭包会被编译成继承groovy.lang.Closure类的类，这个类有一个叫call方法，通过该方法可以传递参数并调用这个闭包.它们可以访问并修改在闭包创建的范围内的变量，在闭包内创建的变量在闭包被调用的范围内同样可以被引用， 闭包可以保存在变量中并被作为参数传递到方法中。语法Groovy 语法与Java 语言的语法很相似，虽然 Groovy 的语法源于Smalltalk和Ruby这类语言的理念，但是可以将它想像成 Java 语言的一种更加简单、表达能力更强的变体。（在这点上，Ruby与 Groovy 不同，因为它的语法与 Java 语法差异很大。）许多 Java 开发人员喜欢 Groovy 代码和 Java 代码的相似性。从学习的角度看，如果知道如何编写 Java 代码，那就已经了解 Groovy 了。Groovy 和 Java 语言的主要区别是：完成同样的任务所需的 Groovy 代码比 Java 代码更少。PL0000033=Smalltalk=Smalltalk被公认为历史上第二个面向对象的程序设计语言和第一个真正的集成开发环境 (IDE)。由Alan Kay，Dan Ingalls，Ted Kaehler，Adele Goldberg等于70年代初在Xerox PARC开发。Smalltalk对其它众多的程序设计语言的产生起到了极大的推动作用，主要有：Objective-C，Actor， Java 和Ruby等。90年代的许多软件开发思想得利于Smalltalk，例如Design Patterns， Extreme Programming(XP)和Refactoring等。20世纪70年代到80年代前期，美国施乐公司的帕洛阿尔托研究中心（PARC）开发了Smalltalk编程语言。从Smalltalk-72、Smalltalk-78到Smalltalk-80，他们开发完成了整个Smalltalk系列，Smalltalk编程语言对近代面向对象编程语言影响很大，所以称之为“面向对象编程之母”。（此段摘自《松本行宏的程序世界》）
PL0000034=Kotlin=Kotlin是一个基于 JVM 的新的编程语言，由 JetBrains 开发。Kotlin可以编译成Java字节码，也可以编译成JavaScript，方便在没有JVM的设备上运行。JetBrains，作为目前广受欢迎的Java IDE IntelliJ 的提供商，在 Apache 许可下已经开源其Kotlin 编程语言。Kotlin已正式成为Android官方支持开发语言。创建一种兼容Java的语言。让它比Java更安全，能够静态检测常见的陷阱。如：引用空指针让它比Java更简洁，通过支持variable type inference，higher-order functions (closures)，extension functions，mixins and first-class delegation等实现。让它比最成熟的竞争对手Scala语言更加简单。PL0000032=Scala=联邦理工学院洛桑（EPFL）的Martin Odersky于2001年基于Funnel的工作开始设计Scala。Funnel是把函数式编程思想和Petri网相结合的一种编程语言。Odersky先前的工作是Generic Java和javac（Sun Java编译器）。Java平台的Scala于2003年底/2004年初发布。.NET平台的Scala发布于2004年6月。该语言第二个版本，v2.0，发布于2006年3月。截至2009年9月，最新版本是版本2.7.6 。Scala 2.8预计的特性包括重写的Scala类库（Scala collections library）、方法的命名参数和默认参数、包对象（package object），以及Continuation.2009年4月，Twitter宣布他们已经把大部分后端程序从Ruby迁移到Scala，其余部分也打算要迁移。此外， Wattzon已经公开宣称，其整个平台都已经是基于Scala基础设施编写的。Scala是一门多范式的编程语言，一种类似java的编程语言[1]  ，设计初衷是实现可伸缩的语言[2]  、并集成面向对象编程和函数式编程的各种特性。特性，包括：* 面向对象风格* 函数式风格* 更高层的并发模型Scala把Erlang风格的基于actor的并发带进了JVM。开发者可以利用Scala的actor模型在JVM上设计具伸缩性的并发应用程序，它会自动获得多核心处理器带来的优势，而不必依照复杂的Java线程模型来编写程序。* 轻量级的函数语法o 高阶o 嵌套o 局部套用（Currying）o 匿名* 与XML集成o 可在Scala程序中直接书写XMLo 可将XML转换成Scala类* 与Java无缝地互操作Scala的风格和特性已经吸引了大量的开发者，比如Debasish Ghosh就觉得：我已经把玩了Scala好一阵子，可以说我绝对享受这个语言的创新之处。总而言之，Scala是一种函数式面向对象语言，它融汇了许多前所未有的特性，而同时又运行于JVM之上。随着开发者对Scala的兴趣日增，以及越来越多的工具支持，无疑Scala语言将成为你手上一件必不可少的工具。